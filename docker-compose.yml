version: '3.10'

services:
  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_PORT=5432
    ports:
      - "5433:5432"
    restart: always

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always

  web:
    build: .
    command: sh -c "python manage.py runserver 0.0.0.0:8000"

    volumes:
      - .:/r4f
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1  # Set to 0 in production
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - DATABASE_URL=postgres://postgres:123@db:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
    restart: always

  celery_worker1:
    build: .
    command: celery -A r4f24 worker --loglevel=info --pool=solo
    volumes:
      - .:/r4f
    depends_on:
      - web
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
    restart: always

  celery_worker2:
    build: .
    command: celery -A r4f24 worker --loglevel=info --pool=solo
    volumes:
      - .:/r4f24
    depends_on:
      - web
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
    restart: always

  flower:
    image: mher/flower
    command: celery --broker=redis://redis:6379/0 flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
    restart: always

volumes:
  postgres_data:
